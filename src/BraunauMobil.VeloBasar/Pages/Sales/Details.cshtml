@page
@model DetailsModel

@{
    ViewData["Title"] = $"{Html.DisplayNameFor(x => x.Sale)} #{Model.Sale.Number}";
}

<div class="card my-3">
    <div class="card-header d-flex justify-content-between align-items-md-center">
        <div class="mr-auto"><h5>@ViewData["Title"]</h5></div>
        <div><h5>@Model.Sale.TimeStamp</h5></div>
        <a velo-page="@Model.GetShowFilePage()" target="_blank" class="btn btn-primary mx-1 ml-auto">@Localizer["Beleg"]</a>
    </div>
</div>

<div class="card my-3">
    <h5 class="card-header">@Localizer["Artikel"]</h5>

    <div class="card-body p-0">
        @if (Model.Sale.Products.Count > 0)
        {
            <partial name="/Pages/Products/_Table.cshtml" model="@Model.Sale.Products.CreateListViewModel(VeloContext.Basar)" />
        }
    </div>
</div>

<div Condition="@Model.ShowSuccess" class="alert alert-success" role="alert">
    @Localizer["Verkauf erfolgreich!"]
</div>
<div Condition="@Model.Sale.Products.Count <= 0" class="alert alert-warning" role="alert">
    @Localizer["Es wurden alle Artikel des Verkaufs storniert."]
</div>

@section Scripts {
@if (Model.OpenDocument)
{
    <script type="text/javascript">
        //  @@todo evil hack from hell
        window.open("/ShowFile?basarId=@VeloContext.Basar.Id.ToString()&fileId=@Model.Sale.DocumentId.ToString()", "_blank");
    </script>
}
}
