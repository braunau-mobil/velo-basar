@page
@model BraunauMobil.VeloBasar.Pages.Sellers.DetailsModel

@using Microsoft.AspNetCore.Mvc.Localization
@using VeloBasar.Resources
@using VeloBasar.Models

@inject IHtmlLocalizer<SharedResource> Localizer

@{
    ViewData["Title"] = Localizer["Verkäuferin"];
}

<h2>#@Model.Seller.Id @Html.DisplayFor(model => model.Seller.FirstName) @Html.DisplayFor(model => model.Seller.LastName)</h2>

<a asp-page="/Products/AddMany" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@Model.Seller.Id" class="btn btn-default">@Localizer["Artikel annehmen"]</a>
@if (Model.CanSettle)
{
    <a asp-page="/Settlements/CreateAndPrint" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@Model.Seller.Id" target="_blank" class="btn btn-default">@Localizer["Abrechnen"]</a>
}
<a asp-page="./CreateAndPrintLabels" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@Model.Seller.Id" target="_blank" class="btn btn-default">@Localizer["Etiketten drucken"]</a>
|
<a asp-page="./Edit" asp-all-route-data="@Model.GetSellerRoute()" class="btn btn-default">@Localizer["Bearbeiten"]</a>
<a asp-page="./Delete" asp-all-route-data="@Model.GetSellerRoute()" class="btn btn-default">@Localizer["Löschen"]</a>

<div>
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.Seller.Street)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.Street)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.City)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.City)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.ZIP)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.ZIP)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.Country)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.Country.Name)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.IBAN)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.IBAN)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.BIC)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.BIC)</dd>

        <dt>@Html.DisplayNameFor(model => model.Seller.BankAccountHolder)</dt>
        <dd>@Html.DisplayFor(model => model.Seller.BankAccountHolder)</dd>

        <dt>@Html.DisplayNameFor(model => model.Stats.AceptedProductCount)</dt>
        <dd>@Html.DisplayFor(model => model.Stats.AceptedProductCount)</dd>

        <dt>@Html.DisplayNameFor(model => model.Stats.SoldProductCount)</dt>
        <dd>@Html.DisplayFor(model => model.Stats.SoldProductCount)</dd>

        <dt>@Html.DisplayNameFor(model => model.Stats.NotSoldProductCount)</dt>
        <dd>@Html.DisplayFor(model => model.Stats.NotSoldProductCount)</dd>

        <dt>@Html.DisplayNameFor(model => model.Stats.PickedUpProductCount)</dt>
        <dd>@Html.DisplayFor(model => model.Stats.PickedUpProductCount)</dd>

        <dt>@Html.DisplayNameFor(model => model.Stats.SettlementAmout)</dt>
        <dd>@Html.DisplayFor(model => model.Stats.SettlementAmout)</dd>


    </dl>
    <hr />
</div>

<partial name="/Pages/Products/_List.cshtml" model="@new ViewModels.ProductsViewModel(Model.Basar, Model.Products)" />

<h4>@Localizer["Annahmen"]</h4>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.AcceptanceStatistics[0].Transaction.Number)</th>
                <th>@Html.DisplayNameFor(model => model.AcceptanceStatistics[0].Transaction.TimeStamp)</th>
                <th>@Html.DisplayNameFor(model => model.AcceptanceStatistics[0].ProductCount)</th>
                <th>@Html.DisplayNameFor(model => model.AcceptanceStatistics[0].Amount)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AcceptanceStatistics)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.Number)</td>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.TimeStamp)</td>
                    <td>@Html.DisplayFor(modelItem => item.ProductCount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>
                        <a asp-page="/Acceptances/Details" asp-all-route-data="@Model.GetItemRoute(item.Transaction)" target="_blank">@Localizer["Details"]</a>
                        @if (item.Transaction.DocumentId != null)
                        {
                            @:|
                            <a asp-page="/ShowFile" asp-all-route-data="@Model.GetItemRoute(item)" target="_blank">@Localizer["Beleg"]</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<h4>@Localizer["Abrechnugnen"]</h4>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.SettlementStatistics[0].Transaction.Number)</th>
                <th>@Html.DisplayNameFor(model => model.SettlementStatistics[0].Transaction.TimeStamp)</th>
                <th>@Html.DisplayNameFor(model => model.SettlementStatistics[0].ProductCount)</th>
                <th>@Html.DisplayNameFor(model => model.SettlementStatistics[0].Amount)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SettlementStatistics)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.Number)</td>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.TimeStamp)</td>
                    <td>@Html.DisplayFor(modelItem => item.ProductCount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>
                        <a asp-page="/ShowFile" asp-all-route-data="@Model.GetItemRoute(item)" target="_blank">@Localizer["Beleg"]</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>