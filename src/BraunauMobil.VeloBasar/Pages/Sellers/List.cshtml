@page
@model BraunauMobil.VeloBasar.Pages.Sellers.ListModel

@{
    ViewData["Title"] = "Verkäuferinnen";
}

<h2>Verkäuferinnen</h2>

<p>
    <a asp-page="Create">Neue Verkäuferin</a>
</p>

<form asp-page="./List" method="get" asp-route-basarId="@Model.Basar.Id">
    <div class="form-actions no-color">
        <p>
            Suchen:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Suchen" class="btn btn-default" /> |
            <a asp-page="./List" asp-route-basarId="@Model.Basar.Id">Zurücksetzen</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].ZIP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sellers[0].Country.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Sellers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZIP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.Name)
                </td>
                <td>
                    <a asp-page="./Edit" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@item.Id">Bearbeiten</a> |
                    <a asp-page="./Details" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-all-route-data="@Model.GetRoute()" asp-route-sellerId="@item.Id">Löschen</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Sellers.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Sellers.HasNextPage ? "disabled" : "";
}

<a asp-page="./List"
   asp-all-route-data="@Model.GetRoute()"
   asp-route-pageIndex="@(Model.Sellers.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./List"
   asp-all-route-data="@Model.GetRoute()"
   asp-route-pageIndex="@(Model.Sellers.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>