@using Microsoft.AspNetCore.Identity
@model TransactionSuccessModel
@{
    ViewData.SetTitle(Localizer[VeloTexts.TransactionTypeWithNumber, Localizer[VeloTexts.Singular(Model.Entity.Type)], Model.Entity.Number]);
}
@inject SignInManager<IdentityUser> SignInManager


<div class="m-2">
    @VeloHtml.Alert(MessageType.Success, Localizer[VeloTexts.TransactionSuccesful, Localizer[VeloTexts.Singular(Model.Entity.Type)]])
</div>

<partial name="_Details.cshtml" model="Model.Entity" />

@if (Model.ShowAmountInput || Model.ShowChange)
{
    <div class="card m-2">
        <div class="card-header">@Localizer[VeloTexts.ChangeMoney]</div>
        @if (Model.ShowAmountInput)
        {
            <div class="card-body">
                <form method="post">
                    @VeloHtml.NumberInputField(nameof(Model.AmountGiven), Model.AmountGiven, Localizer[VeloTexts.AmountGiven], autoFocus: true)
                    <button class="btn btn-primary">@Localizer[VeloTexts.CalculateChangeMoney]</button>
                </form>
            </div>
        }
        @if (Model.ShowChange)
        {
            <div class="card-footer p-0">
                <partial name="_Change.cshtml" model="Model.Entity.Change" />
            </div>
        }
    </div>
}

@if (Model.Entity.Type == TransactionType.Sale)
{
    <a class="btn btn-@TransactionType.Sale.ToCssColor() m-2" href="@Router.Cart.ToIndex()">@Localizer[VeloTexts.NewSale]</a>
}

@section Scripts {

@if (Model.OpenDocument)
{
    <script type="text/javascript">
        window.open("@Router.Transaction.ToDocument(Model.DocumentTransactionId)", "_blank");
    </script>
}

@if (Model.ShowAmountInput)
{
    <script type="text/javascript">
            const input = document.getElementById('@VeloHtml.Id(nameof(Model.AmountGiven))');
        input.select();
    </script>
}

}
