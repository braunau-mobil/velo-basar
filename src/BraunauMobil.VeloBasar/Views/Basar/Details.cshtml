@model BasarDetailsModel

@{
    ViewData.SetTitle(Txt.BasarDetails);
}
<div class="card m-2">
    <div class="card-header">
        <div class="row justify-content-evenly align-items-center">
            <h4 class="col-auto m-0">@Txt.AcceptanceCount(Model.AcceptanceCount)</h4>
            <h4 class="col-auto m-0">@Txt.SaleCount(Model.SaleCount)</h4>
            <h4 class="col-auto m-0">@Txt.SellerCount(@Model.SellerCount)</h4>
            <h4 class="col-auto m-0">@Txt.LostProducts(Model.LostProductsCount)</h4>
            <h4 class="col-auto m-0">@Txt.LockedProductsCount(Model.LockedProductsCount)</h4>
        </div>
    </div>
    @if (Model.SettlementPercentage > 0)
    {
        <div class="card-body">
            <h6>@Txt.SettlementProgress</h6>
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: @Model.SettlementPercentage%;">@Model.SettlementPercentage %</div>
            </div>
        </div>        
    }
</div>

<div class="row">
    <div class="col">
        <div class="card m-2">
            <div class="card-header">@Txt.AcceptedProductsCount @Model.AcceptedProductsCount</div>
            <div class="card-body">
                <canvas class="pie-chart" id="AcceptedProductsCountChartArea"></canvas>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card m-2">
            <div class="card-header">@Txt.SoldProductsCount(Model.SoldProductsCount)</div>
            <div class="card-body">
                <canvas class="pie-chart" id="SoldProductsCountChartArea"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="card m-2">
            <div class="card-header">@Txt.AcceptedProductsAmount(Model.AcceptedProductsAmount)</div>
            <div class="card-body">
                <canvas class="pie-chart" id="AcceptedProductsValueChartArea"></canvas>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card m-2">
            <div class="card-header">@Txt.SoldProductsAmount(Model.SoldProductsAmount)</div>
            <div class="card-body">
                <canvas class="pie-chart" id="SoldProductsValueChartArea"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="card m-2">
    <div class="card-header">@Txt.PriceDistribution</div>
    <div class="card-body"><canvas id="PriceDistributionChartArea"></canvas></div>
</div>

<div class="card m-2">
    <div class="card-header">@Txt.SaleDistribution</div>
    <div class="card-body"><canvas id="SaleDistributionChartArea"></canvas></div>
</div>

@section Scripts {
    <script src="~/lib/chartjs/js/chart.min.js" asp-append-version="true"></script>
    <script>
        function renderData(id, config) {
            var ctx = document.getElementById(id).getContext('2d');
            window.myPie = new Chart(ctx, config);
        }

        window.onload = function () {
            renderData('AcceptedProductsCountChartArea', @Html.Raw(JsonUtils.GetDonutConfig(Model.AcceptedProductsByCount)));
            renderData('AcceptedProductsValueChartArea', @Html.Raw(JsonUtils.GetDonutConfig(Model.AcceptedProductsByAmount)));
            renderData('SoldProductsCountChartArea', @Html.Raw(JsonUtils.GetDonutConfig(Model.SoldProductsByCount)));
            renderData('SoldProductsValueChartArea', @Html.Raw(JsonUtils.GetDonutConfig(Model.SoldProductsByAmount)));
            renderData('PriceDistributionChartArea', @Html.Raw(JsonUtils.GetLineConfig(Model.PriceDistribution, @Txt.PriceDistribution)));
            renderData('SaleDistributionChartArea', @Html.Raw(JsonUtils.GetLineConfig(Model.SaleDistribution, @Txt.SaleDistribution)));
        };
    </script>
}
