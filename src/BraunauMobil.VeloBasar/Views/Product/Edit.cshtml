@model ProductEntity
@inject ISelectListService SelectLists
@{
    ViewData.SetTitle(Localizer[VeloTexts.EditProduct]);
}

<form method="post">
    <div class="card m-2">
        @VeloHtml.TitleCardHeader()
        <div class="card-body">
            @VeloHtml.SelectField(nameof(Model.TypeId), Model.TypeId, await SelectLists.ProductTypesAsync(), Localizer[VeloTexts.ProductType], autoFocus: true)
            @VeloHtml.DataListField(nameof(Model.Brand), Model.Brand, await SelectLists.BrandsAsync(), Localizer[VeloTexts.Brand])
            @VeloHtml.TextInputField(nameof(Model.Description), Model.Description, Localizer[VeloTexts.Description])
            @VeloHtml.TextInputField(nameof(Model.Color), Model.Color, Localizer[VeloTexts.Color])
            @VeloHtml.TextInputField(nameof(Model.FrameNumber), Model.FrameNumber, Localizer[VeloTexts.FrameNumber])
            @VeloHtml.TextInputField(nameof(Model.TireSize), Model.TireSize, Localizer[VeloTexts.TireSize])
            @VeloHtml.NumberInputField(nameof(Model.Price), Model.Price, Localizer[VeloTexts.Price])
            @VeloHtml.CheckBoxField(nameof(Model.DonateIfNotSold), Model.DonateIfNotSold, Localizer[VeloTexts.DonateIfNotSold])
            @VeloHtml.HiddenInputs(Model)
            @VeloHtml.HiddenInput(nameof(Model.SessionId), Model.SessionId)
            @VeloHtml.HiddenInput(nameof(Model.ValueState), (int)Model.ValueState)
            @VeloHtml.HiddenInput(nameof(Model.StorageState), (int)Model.StorageState)

        </div>
        <div class="card-footer">
            <a class="btn btn-secondary" href="@Router.Product.ToDetails(Model.Id)">@Localizer[VeloTexts.Cancel]</a>
            <button class="btn btn-primary">@Localizer[VeloTexts.Save]</button>
        </div>
    </div>
</form>
