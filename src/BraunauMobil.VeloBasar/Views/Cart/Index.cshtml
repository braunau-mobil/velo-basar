@model CartModel
@{
    ViewData.SetTitle(Localizer[VeloTexts.NewSale]);
}

<form method="post">
    <div class="card m-2">
        @VeloHtml.TitleCardHeader()
        <div class="card-body">
            @VeloHtml.NumberInputField(nameof(Model.ProductId), Model.ProductId, Localizer[VeloTexts.EnterProductId], autoFocus: true)
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" formaction="@Router.Cart.ToAdd()">@Localizer[VeloTexts.Add]</button>
        </div>
    </div>

    <div class="card m-2">
        <div class="card-body p-0">
            @(VeloHtml.ProductsTable(Model.Products, showId: true, showState: true, showSum: true)
                .Column(c => c.ForLink(product => Router.Cart.ToDelete(product.Id), Localizer[VeloTexts.Delete]))
                .Build())
        </div>
        <div class="card-footer">
            @if (Model.HasProducts)
            {
                <button class="btn btn-primary" formaction="@Router.Cart.ToCheckout()">@Localizer[VeloTexts.Checkout]</button>
                <a class="btn btn-danger" href="@Router.Cart.ToClear()">@Localizer[VeloTexts.ClearCart]</a>
            }
        </div>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        const input = document.getElementById('@VeloHtml.Id(nameof(Model.ProductId))');
        input.select();
    </script>
}

