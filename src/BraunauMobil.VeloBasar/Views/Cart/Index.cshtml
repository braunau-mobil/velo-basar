@model CartModel
@{
    ViewData.SetTitle(Txt.NewSale);
}

<form method="post">
    <div class="card m-2">
        @VeloHtml.TitleCardHeader()
        <div class="card-body">
            @VeloHtml.NumberInputField(nameof(Model.ProductId), Model.ProductId, Txt.EnterProductId, autoFocus: true)
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" formaction="@Router.Cart.ToAdd()">@Txt.Add</button>
        </div>
    </div>

    <div class="card m-2">
        <div class="card-body p-0">
            @(VeloHtml.ProductsTable(Model.Products, showId: true, showState: true, showSum: true)
                .LinkColumn()
                    .ForLink(product => Router.Cart.ToDelete(product.Id), Txt.Delete)
                .Build())
        </div>
        <div class="card-footer">
            @if (Model.HasProducts)
            {
                <button class="btn btn-primary" formaction="@Router.Cart.ToCheckout()">@Txt.Checkout</button>
                <a class="btn btn-danger" href="@Router.Cart.ToClear()">@Txt.ClearCart</a>
            }
        </div>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        const input = document.getElementById('@VeloHtml.Id(nameof(Model.ProductId))');
        input.select();
    </script>
}

